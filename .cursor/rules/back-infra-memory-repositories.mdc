---
description: Domain memory repositories implementation pattern
globs: src/lib/infrastructur/**/repositories/*memory-repository.ts
alwaysApply: false
---
---
description: Domain memory repositories implementation pattern
globs: src/lib/infrastructur/**/repositories/*memory-repository.ts
alwaysApply: false
---
## Memory Repository Pattern
- All domain repositories should implement their respective repository interface (e.g., `MapRepository`)
- Use the `GenericAggregateMemoryRepository` as the underlying implementation for in-memory storage
- Create a private repository property of type `GenericAggregateMemoryRepository<AttributesType, AggregateType>`
- In the constructor, initialize the repository with a class that extends the domain aggregate
- The extending class should handle proper construction of the aggregate with its related entities
- Related items should be passed as structured objects:
  - `relatedItems`: For single entity relationships (e.g., owner)
  - `relatedLists`: For collections of entities (e.g., items)
- Repository classes should be named with the pattern: `{EntityName}AggregateRepository`

## Example Structure
```typescript
export class EntityAggregateRepository implements EntityRepository {
  private repository: GenericAggregateMemoryRepository<EntityAttributes, EntityAggregate>;

  constructor() {
    this.repository = new GenericAggregateMemoryRepository<EntityAttributes, EntityAggregate>(
      class extends EntityAggregate {
        constructor(
          data: EntityAttributes,
          relatedItems: Record<string, GenericAggregate>,
          relatedLists: Record<string, GenericAggregate[]>,
        ) {
          super(
            data,
            relatedItems.someRelation as SomeRelationEntity,
            relatedLists.someCollection as SomeCollectionEntity[],
          );
        }
      },
    );
  }
  
  // Implement repository interface methods here
}
```

## Implementation Notes
- This pattern ensures proper domain encapsulation
- It separates the domain model from the persistence mechanism
- It allows for easy switching between different storage implementations